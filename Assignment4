1. Write JUnitTest for all the problems in assignemnt3.
@test
public void test() {
  FindPowerOfThree lyn = new FindPowerOfThree();
  int n =3;
  int[]= lyn.findPowerOfThree(n);
  int[] result = {1,3,9};
  assertArrayEquals(result,output);
}

@test
public void test() {
	CountDigits lyn = new CountDigits();
	int n =53;
  int output=lyn.countDigits(n);
	int result=1;
	assertEquals(result,output);
}

@test
public void test() {
  PrintNumbers lyn = new PrintNumbers();
  int n = 5;
  int[] output = lyn.printNumbers(n);
  int[] result = {1,3,5,7,9};
  assertArrayEquals(result,output);
}

@test
public void test() {
  GeneratePascalsTraingle lyn = new GeneratePascalsTraingle();
  int n = 5;
  int[][] output = lyn.generatePascalsTriangle(n);
  int[][] result = {{1, 0, 0, 0, 0}, {1, 1, 0, 0, 0},
                {1, 2, 1, 0, 0}, {1, 3, 3, 1, 0,},
                {1, 4, 6, 4, 1}};
  assertArrayEquals(result, output);
}

@test
public void test() {
  ReverseVowels lyn = new ReverseVowels();
  String s = "hello";
  String output = lyn.reverseVowels(s);
  String result = "holle";
  assertEquals(result, output);
}

@test
public void test() {
  LengthOfLastWord lyn = new LengthOfLastWord();
  String s = "the code is beautiful";
  int output = lyn.lengthOfLastWord(s);
  int result = 9;
  assertEquals(result, output);
  }

@test
public void test(){
    ReverseString2 lyn = new ReverseString2();
    String s = "I like soccer";
    String output = lyn.reverseString2(s);
    String result = "soccer like I";
    assertEquals(result,output);
  }
  
2. Implement Class MusicAlbum which encapsulated a music Album, each album has a string variable albumTitle and a String variable singer representing the name of singer, double variable price representing the price of album, objects of this class are Initialized using all of its instance variables.
The class has accessor methods for all its Variables and a mutator method for price.

public class MusicAlbum {

private String albumTitle;
private String singerName;
private double albumPrice;

MusicAlbum(String albumTitle,String singerName,double albumPrice){
   this.albumTitle=albumTitle;
   this.singerName=singerName;
   this.albumPrice=albumPrice;
}
public String getAlbumTitle() {
	return albumTitle;
}
public void setAlbumTitle(String albumTitle) {
	this.albumTitle = albumTitle;
}
public String getSingerName() {
	return singerName;
}
public void setSingerName(String singerName) {
	this.singerName = singerName;
}
public double getAlbumPrice() {
	return albumPrice;
}
public void setAlbumPrice(double albumPrice) {
	this.albumPrice = albumPrice;
}
}

3. Write a class named GasTank containing:
An instance variable named amount of type double, initialized to 0.
A method named addGas that accepts a parameter of type double . The value of the amount instance variable is increased by the value of the parameter.
A method named useGas that accepts a parameter of type double . The value of the amount instance variable is decreased by the value of the parameter.
A method named getGasLevel that accepts no parameters. getGasLevel returns the value of the amount instance variable.

public class GasTank {
	private double amount;
  GasTank(){
  amount=0;
  }
public void addGas(double A){
	amount+=A;
}
public void useGas(double B ){
if(amount>=B){
  amount-=B;
}
else{
  amount=0;
}
}
public double getGasLevel(){
	return amount;
}
}

4. Design and implement a class called Car. You need to create necessary attributes for this class, and method if needed
Define the Car constructor to initialize these values (in that order). Include getter and setter methods for all instance data.

public class Car {

 private String plateNum;
 private double carPrice;
 private int carYear;

 public Car(String plateNum, double carPrice, int carYear){
 this.plateNum=plateNum;
 this.carPrice=carPrice;
 this.carSpeed=carYear;
 }
 public void startEngine(){
 System.out.print("The car start running");
 }
 public void stopEngine(){
 System.out.print("The car stopped");
 }
public String getPlateNum() {
	return plateNum;
}
public void setPlateNum(String plateNum) {
	this.plateNum = plateNum;
}
public double getCarPrice() {
	return carPrice;
}
public void setCarPrice(double carPrice) {
	this.carPrice = carPrice;
}
public int getCarYear() {
	return carYear;
}
public void setCarYear(int carYear) {
	this.carYear = carYear;
}
}

5. Combine with problem 3 and 4, define a class named Driver that contains methods like drive and addGas so that the driver can drive the car.

public class Driver {
private String driverName;
private String driverLicenseID;

Driver(String driverName,String driverLicenseID){
this.driverName=driveName;
this.driverLicenseID=driverLicenseID;
}
public String getDriverName() {
	return driverName;
}
public void setDriverName(String driverName) {
	this.driverName = driverName;
}
public String getDriverLicenseID() {
	return driverLicenseID;
}
public void setDriverLicenseID(String driverLicenseID) {
	this.driverLicenseID = driverLicenseID;
}
public void addGas(GasTank gasTank,double A){
	gasTank.addGas(A);
}
public void startEngine(Car car){
	car.startEngine();
}
public void stopEngine(Car car){
	car.stopEngine();
}
}
